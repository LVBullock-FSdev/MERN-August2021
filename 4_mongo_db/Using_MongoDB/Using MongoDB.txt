
Create a database called 'my_first_db'.  **added my_second_db for August Cohort**
> use my_second_db
> show dbs
admin         0.000GB
config        0.000GB
jokes         0.000GB
local         0.000GB
my_first_db   0.000GB
my_second_db  0.000GB
test          0.000GB 


Create students collection.
switched to db my_second_db
> db.createCollection("students")
{ "ok" : 1 }
> show collections
students


Each document you insert into this collection should have the following format: ({name: STRING, home_state: STRING, lucky_number: NUMBER, birthday: {month: NUMBER, day: NUMBER, year: NUMBER}}).  Create 5 students with the appropriate info.
> db.students.insert({name: "Jojo Boogie", home_state: "California", lucky_number: 7, birthday: {month: 10, day: 14, year: 1992}})
WriteResult({ "nInserted" : 1 })
> db.students.insert({name: "Rainbow Ninja", home_state: "Washington", lucky_number: 3, birthday: {month: 12, day: 6, year: 1997}})   
WriteResult({ "nInserted" : 1 })
> db.students.insert({name: "Larry Sneakers", home_state: "California", lucky_number: 3, birthday: {month: 5, day: 27, year: 1999}})    
WriteResult({ "nInserted" : 1 })
> db.students.insert({name: "Teal Butterfly", home_state: "Washington", lucky_number: 10, birthday: {month: 5, day: 16, year: 1992}})
WriteResult({ "nInserted" : 1 })
> db.students.insert({name: "Winsome Wednesday", home_state: "California", lucky_number: 15, birthday: {month: 6, day: 21, year: 1986}})
WriteResult({ "nInserted" : 1 })


Get all students.
> db.students.find()
{ "_id" : ObjectId("613120114262d9bbded23063"), "name" : "Jojo Boogie", "home_state" : "California", "lucky_number" : 7, "birthday" : { "month" : 10, "day" : 14, "year" : 1992 } }
{ "_id" : ObjectId("613120704262d9bbded23064"), "name" : "Rainbow Ninja", "home_state" : "Washington", "lucky_number" : 3, "birthday" : { "month" : 12, "day" : 6, "year" : 1997 } }
{ "_id" : ObjectId("613120bf4262d9bbded23065"), "name" : "Larry Sneakers", "home_state" : "California", "lucky_number" : 3, "birthday" : { "month" : 5, "day" : 27, "year" : 1999 } }
{ "_id" : ObjectId("6131210d4262d9bbded23066"), "name" : "Teal Butterfly", "home_state" : "Washington", "lucky_number" : 10, "birthday" : { "month" : 5, "day" : 16, "year" : 1992 } }
{ "_id" : ObjectId("613121484262d9bbded23067"), "name" : "Winsome Wednesday", "home_state" : "California", "lucky_number" : 15, "birthday" : { "month" : 6, "day" : 21, "year" : 1986 } }


Retrieve all students who are from California (San Jose Dojo) or Washington (Seattle Dojo).
> db.students.find({$or: [{home_state:"California"}, {home_state:"Washington"}]})
{ "_id" : ObjectId("613120114262d9bbded23063"), "name" : "Jojo Boogie", "home_state" : "California", "lucky_number" : 7, "birthday" : { "month" : 10, "day" : 14, "year" : 1992 } }
{ "_id" : ObjectId("613120704262d9bbded23064"), "name" : "Rainbow Ninja", "home_state" : "Washington", "lucky_number" : 3, "birthday" : { "month" : 12, "day" : 6, "year" : 1997 } }
{ "_id" : ObjectId("613120bf4262d9bbded23065"), "name" : "Larry Sneakers", "home_state" : "California", "lucky_number" : 3, "birthday" : { "month" : 5, "day" : 27, "year" : 1999 } }
{ "_id" : ObjectId("6131210d4262d9bbded23066"), "name" : "Teal Butterfly", "home_state" : "Washington", "lucky_number" : 10, "birthday" : { "month" : 5, "day" : 16, "year" : 1992 } }
{ "_id" : ObjectId("613121484262d9bbded23067"), "name" : "Winsome Wednesday", "home_state" : "California", "lucky_number" : 15, "birthday" : { "month" : 6, "day" : 21, "year" : 1986 } }


Get all students whose lucky number is greater than 3
> db.students.find({lucky_number: {$gt: 3}})
{ "_id" : ObjectId("613120114262d9bbded23063"), "name" : "Jojo Boogie", "home_state" : "California", "lucky_number" : 7, "birthday" : { "month" : 10, "day" : 14, "year" : 1992 } }
{ "_id" : ObjectId("6131210d4262d9bbded23066"), "name" : "Teal Butterfly", "home_state" : "Washington", "lucky_number" : 10, "birthday" : { "month" : 5, "day" : 16, "year" : 1992 } }
{ "_id" : ObjectId("613121484262d9bbded23067"), "name" : "Winsome Wednesday", "home_state" : "California", "lucky_number" : 15, "birthday" : { "month" : 6, "day" : 21, "year" : 1986 } } 


Get all students whose lucky number is less than or equal to 10
> db.students.find({lucky_number: {$lte: 10}})
{ "_id" : ObjectId("613120114262d9bbded23063"), "name" : "Jojo Boogie", "home_state" : "California", "lucky_number" : 7, "birthday" : { "month" : 10, "day" : 14, "year" : 1992 } }
{ "_id" : ObjectId("613120704262d9bbded23064"), "name" : "Rainbow Ninja", "home_state" : "Washington", "lucky_number" : 3, "birthday" : { "month" : 12, "day" : 6, "year" : 1997 } }
{ "_id" : ObjectId("613120bf4262d9bbded23065"), "name" : "Larry Sneakers", "home_state" : "California", "lucky_number" : 3, "birthday" : { "month" : 5, "day" : 27, "year" : 1999 } }
{ "_id" : ObjectId("6131210d4262d9bbded23066"), "name" : "Teal Butterfly", "home_state" : "Washington", "lucky_number" : 10, "birthday" : { "month" : 5, "day" : 16, "year" : 1992 } }


Get all students whose lucky number is between 1 and 9 (inclusive)
> db.students.find({$and:[{lucky_number:{$lte:9}}, {lucky_number:{$gte:1}}]})
{ "_id" : ObjectId("613120114262d9bbded23063"), "name" : "Jojo Boogie", "home_state" : "California", "lucky_number" : 7, "birthday" : { "month" : 10, "day" : 14, "year" : 1992 } }
{ "_id" : ObjectId("613120704262d9bbded23064"), "name" : "Rainbow Ninja", "home_state" : "Washington", "lucky_number" : 3, "birthday" : { "month" : 12, "day" : 6, "year" : 1997 } }
{ "_id" : ObjectId("613120bf4262d9bbded23065"), "name" : "Larry Sneakers", "home_state" : "California", "lucky_number" : 3, "birthday" : { "month" : 5, "day" : 27, "year" : 1999 } }


Add a field named 'interests' to all student documents in the collection. The field should be an array and contain the following entries: 'coding', 'brunch', MongoDB'. Add this field to all documents using a single command.
> db.students.update({},{$set: {"interests":['coding', 'brunch', 'MongoDB']}},{multi:true})
WriteResult({ "nMatched" : 5, "nUpserted" : 0, "nModified" : 5 })
> db.students.find()
{ "_id" : ObjectId("613120114262d9bbded23063"), "name" : "Jojo Boogie", "home_state" : "California", "lucky_number" : 7, "birthday" : { "month" : 10, "day" : 14, "year" : 1992 }, "interests" : [ "coding", "brunch", "MongoDB" ] }
{ "_id" : ObjectId("613120704262d9bbded23064"), "name" : "Rainbow Ninja", "home_state" : "Washington", "lucky_number" : 3, "birthday" : { "month" : 12, "day" : 6, "year" : 1997 }, "interests" : [ "coding", "brunch", "MongoDB" ] }
{ "_id" : ObjectId("613120bf4262d9bbded23065"), "name" : "Larry Sneakers", "home_state" : "California", "lucky_number" : 3, "birthday" : { "month" : 5, "day" : 27, "year" : 1999 }, "interests" : [ "coding", "brunch", "MongoDB" ] }
{ "_id" : ObjectId("6131210d4262d9bbded23066"), "name" : "Teal Butterfly", "home_state" : "Washington", "lucky_number" : 10, "birthday" : { "month" : 5, "day" : 16, "year" : 1992 }, "interests" : [ "coding", "brunch", "MongoDB" ] }
{ "_id" : ObjectId("613121484262d9bbded23067"), "name" : "Winsome Wednesday", "home_state" : "California", "lucky_number" : 15, "birthday" : { "month" : 6, "day" : 21, "year" : 1986 }, "interests" : [ "coding", "brunch", "MongoDB" ] }


Add some unique interests for each particular student into each of their interest arrays.*
> db.students.update({name: "Jojo Boogie"},{$push: {interests:{$each:['swimming', 'hiking']}}})   
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.students.update({name: "Rainbow Ninja"},{$push: {interests:{$each:['reading', 'gaming']}}}) 
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.students.update({name: "Larry Sneakers"},{$push: {interests:{$each:['joking', 'texting']}}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.students.update({name: "Teal Butterfly"},{$push: {interests:{$each:['butterflies', 'traveling']}}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.students.update({name: "Winsome Wednesday"},{$push: {interests:{$each:['sewing', 'quilting', 'crafting', 'coding']}}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })


Add the interest 'taxes' into someone's interest array.
> db.students.update({name: "Larry Sneakers"}, {$push: {interests: "taxes"}}) 
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.students.find()                       
{ "_id" : ObjectId("613120114262d9bbded23063"), "name" : "Jojo Boogie", "home_state" : "California", "lucky_number" : 7, "birthday" : { "month" : 10, "day" : 14, "year" : 1992 }, "interests" : [ "coding", "brunch", "MongoDB", "swimming", "hiking" ] }
{ "_id" : ObjectId("613120704262d9bbded23064"), "name" : "Rainbow Ninja", "home_state" : "Washington", "lucky_number" : 3, "birthday" : { "month" : 12, "day" : 6, "year" : 1997 }, "interests" : [ "coding", "brunch", "MongoDB", "reading", "gaming" ] }
{ "_id" : ObjectId("613120bf4262d9bbded23065"), "name" : "Larry Sneakers", "home_state" : "California", "lucky_number" : 3, "birthday" : { "month" : 5, "day" : 27, "year" : 1999 }, "interests" : [ "coding", "brunch", "MongoDB", "joking", "texting", "taxes" ] }
{ "_id" : ObjectId("6131210d4262d9bbded23066"), "name" : "Teal Butterfly", "home_state" : "Washington", "lucky_number" : 10, "birthday" : { "month" : 5, "day" : 16, "year" : 1992 }, "interests" : [ "coding", "brunch", "MongoDB", "butterflies", "traveling" ] }
{ "_id" : ObjectId("613121484262d9bbded23067"), "name" : "Winsome Wednesday", "home_state" : "California", "lucky_number" : 15, "birthday" : { "month" : 6, "day" : 21, "year" : 1986 }, "interests" : [ "coding", "brunch", "MongoDB", "sewing", "quilting", "crafting", "coding" ] }


Remove the 'taxes' interest you just added.
> db.students.update({name: "Larry Sneakers"}, {$pull: {interests: "taxes"}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.students.find()
{ "_id" : ObjectId("613120114262d9bbded23063"), "name" : "Jojo Boogie", "home_state" : "California", "lucky_number" : 7, "birthday" : { "month" : 10, "day" : 14, "year" : 1992 }, "interests" : [ "coding", "brunch", "MongoDB", "swimming", "hiking" ] }
{ "_id" : ObjectId("613120704262d9bbded23064"), "name" : "Rainbow Ninja", "home_state" : "Washington", "lucky_number" : 3, "birthday" : { "month" : 12, "day" : 6, "year" : 1997 }, "interests" : [ "coding", "brunch", "MongoDB", "reading", "gaming" ] }
{ "_id" : ObjectId("613120bf4262d9bbded23065"), "name" : "Larry Sneakers", "home_state" : "California", "lucky_number" : 3, "birthday" : { "month" : 5, "day" : 27, "year" : 1999 }, "interests" : [ "coding", "brunch", "MongoDB", "joking", "texting" ] }
{ "_id" : ObjectId("6131210d4262d9bbded23066"), "name" : "Teal Butterfly", "home_state" : "Washington", "lucky_number" : 10, "birthday" : { "month" : 5, "day" : 16, "year" : 1992 }, "interests" : [ "coding", "brunch", "MongoDB", "butterflies", "traveling" ] }
{ "_id" : ObjectId("613121484262d9bbded23067"), "name" : "Winsome Wednesday", "home_state" : "California", "lucky_number" : 15, "birthday" : { "month" : 6, "day" : 21, "year" : 1986 }, "interests" : [ "coding", "brunch", "MongoDB", "sewing", "quilting", "crafting", "coding" ] }


Remove all students who are from California.
> db.students.remove({home_state: "California"})
WriteResult({ "nRemoved" : 3 })
> db.students.find()
{ "_id" : ObjectId("613120704262d9bbded23064"), "name" : "Rainbow Ninja", "home_state" : "Washington", "lucky_number" : 3, "birthday" : { "month" : 12, "day" : 6, "year" : 1997 }, "interests" : [ "coding", "brunch", "MongoDB", "reading", "gaming" ] }
{ "_id" : ObjectId("6131210d4262d9bbded23066"), "name" : "Teal Butterfly", "home_state" : "Washington", "lucky_number" : 10, "birthday" : { "month" : 5, "day" : 16, "year" : 1992 }, "interests" : [ "coding", "brunch", "MongoDB", "butterflies", "traveling" ] }


Remove a student by name.
> db.students.remove({name: "Rainbow Ninja"})
WriteResult({ "nRemoved" : 1 })
> db.students.find()
{ "_id" : ObjectId("6131210d4262d9bbded23066"), "name" : "Teal Butterfly", "home_state" : "Washington", "lucky_number" : 10, "birthday" : { "month" : 5, "day" : 16, "year" : 1992 }, "interests" : [ "coding", "brunch", "MongoDB", "butterflies", "traveling" ] }


*****Had to add more students to complete the assignment*******
> db.students.insert({name: "Monday Blues", home_state: "Michigan", lucky_number: 20, birthday: {month: 11, day: 1, year: 1967}})  
WriteResult({ "nInserted" : 1 })
> db.students.insert({name: "Tempting Tuesday", home_state: "Wyoming", lucky_number: 1, birthday: {month: 6, day: 21, year: 1986}})   
WriteResult({ "nInserted" : 1 })
> db.students.find()
{ "_id" : ObjectId("6131210d4262d9bbded23066"), "name" : "Teal Butterfly", "home_state" : "Washington", "lucky_number" : 10, "birthday" : { "month" : 5, "day" : 16, "year" : 1992 }, "interests" : [ "coding", "brunch", "MongoDB", "butterflies", "traveling" ] }
{ "_id" : ObjectId("61312c544262d9bbded23068"), "name" : "Monday Blues", "home_state" : "Michigan", "lucky_number" : 20, "birthday" : { "month" : 11, "day" : 1, "year" : 1967 } }
{ "_id" : ObjectId("61312cb24262d9bbded23069"), "name" : "Tempting Tuesday", "home_state" : "Wyoming", "lucky_number" : 1, "birthday" : { "month" : 6, "day" : 21, "year" : 1986 } }
*********************************************************************************


Remove a student whose lucky number is greater than 5 (JUST ONE)
> db.students.remove({lucky_number: {$gt:5}}, {justOne:true})
WriteResult({ "nRemoved" : 1 })
> db.students.find()
{ "_id" : ObjectId("61312c544262d9bbded23068"), "name" : "Monday Blues", "home_state" : "Michigan", "lucky_number" : 20, "birthday" : { "month" : 11, "day" : 1, "year" : 1967 } }
{ "_id" : ObjectId("61312cb24262d9bbded23069"), "name" : "Tempting Tuesday", "home_state" : "Wyoming", "lucky_number" : 1, "birthday" : { "month" : 6, "day" : 21, "year" : 1986 } }


Add a field to each student collection called 'number_of_belts' and set it to 0.
> db.students.update({},{$set: {"number_of_belts":0}},{multi:true})
WriteResult({ "nMatched" : 2, "nUpserted" : 0, "nModified" : 2 })
> db.students.find()
{ "_id" : ObjectId("61312c544262d9bbded23068"), "name" : "Monday Blues", "home_state" : "Michigan", "lucky_number" : 20, "birthday" : { "month" : 11, "day" : 1, "year" : 1967 }, "number_of_belts" : 0 }
{ "_id" : ObjectId("61312cb24262d9bbded23069"), "name" : "Tempting Tuesday", "home_state" : "Wyoming", "lucky_number" : 1, "birthday" : { "month" : 6, "day" : 21, "year" : 1986 }, "number_of_belts" : 0 }



********************Added more students*********************
> db.students.find()
{ "_id" : ObjectId("61312c544262d9bbded23068"), "name" : "Monday Blues", "home_state" : "Michigan", "lucky_number" : 20, "birthday" : { "month" : 11, "day" : 1, "year" : 1967 }, "number_of_belts" : 0 }
{ "_id" : ObjectId("61312cb24262d9bbded23069"), "name" : "Tempting Tuesday", "home_state" : "Wyoming", "lucky_number" : 1, "birthday" : { "month" : 6, "day" : 21, "year" : 1986 }, "number_of_belts" : 0 }
{ "_id" : ObjectId("61312f764262d9bbded2306a"), "name" : "Zumba Zack", "home_state" : "Washington", "lucky_number" : 40, "birthday" : { "month" : 10, "day" : 7, "year" : 1994 }, "number_of_belts" : 0 }
{ "_id" : ObjectId("613132364262d9bbded2306b"), "name" : "Jumpin Jane", "home_state" : "Washington", "lucky_number" : 6, "birthday" : { "month" : 2, "day" : 9, "year" : 1999 }, "number_of_belts" : 0 }
**************************************************************************


Increment this field by 1 for all students in Washington (Seattle Dojo).
> db.students.update({home_state: "Washington"},{$inc: {number_of_belts: 1}},{multi:true})
WriteResult({ "nMatched" : 2, "nUpserted" : 0, "nModified" : 2 })
> db.students.find()
{ "_id" : ObjectId("61312c544262d9bbded23068"), "name" : "Monday Blues", "home_state" : "Michigan", "lucky_number" : 20, "birthday" : { "month" : 11, "day" : 1, "year" : 1967 }, "number_of_belts" : 0 }
{ "_id" : ObjectId("61312cb24262d9bbded23069"), "name" : "Tempting Tuesday", "home_state" : "Wyoming", "lucky_number" : 1, "birthday" : { "month" : 6, "day" : 21, "year" : 1986 }, "number_of_belts" : 0 }
{ "_id" : ObjectId("61312f764262d9bbded2306a"), "name" : "Zumba Zack", "home_state" : "Washington", "lucky_number" : 40, "birthday" : { "month" : 10, "day" : 7, "year" : 1994 }, "number_of_belts" : 1 }
{ "_id" : ObjectId("613132364262d9bbded2306b"), "name" : "Jumpin Jane", "home_state" : "Washington", "lucky_number" : 6, "birthday" : { "month" : 2, "day" : 9, "year" : 1999 }, "number_of_belts" : 1 }


Rename the 'number_of_belts' field to 'belts_earned'
> db.students.updateMany({}, {$rename : {"number_of_belts" : "belts_earned"}})
{ "acknowledged" : true, "matchedCount" : 4, "modifiedCount" : 4 }
> db.students.find()
{ "_id" : ObjectId("61312c544262d9bbded23068"), "name" : "Monday Blues", "home_state" : "Michigan", "lucky_number" : 20, "birthday" : { "month" : 11, "day" : 1, "year" : 1967 }, "belts_earned" : 0 }
{ "_id" : ObjectId("61312cb24262d9bbded23069"), "name" : "Tempting Tuesday", "home_state" : "Wyoming", "lucky_number" : 1, "birthday" : { "month" : 6, "day" : 21, "year" : 1986 }, "belts_earned" : 0 }
{ "_id" : ObjectId("61312f764262d9bbded2306a"), "name" : "Zumba Zack", "home_state" : "Washington", "lucky_number" : 40, "birthday" : { "month" : 10, "day" : 7, "year" : 1994 }, "belts_earned" : 1 }
{ "_id" : ObjectId("613132364262d9bbded2306b"), "name" : "Jumpin Jane", "home_state" : "Washington", "lucky_number" : 6, "birthday" : { "month" : 2, "day" : 9, "year" : 1999 }, "belts_earned" : 1 }

Remove the 'lucky_number' field.
> db.students.update({}, {$unset:{lucky_number:""}},{multi:true})
WriteResult({ "nMatched" : 4, "nUpserted" : 0, "nModified" : 4 })
> db.students.find()
{ "_id" : ObjectId("61312c544262d9bbded23068"), "name" : "Monday Blues", "home_state" : "Michigan", "birthday" : { "month" : 11, "day" : 1, "year" : 1967 }, "belts_earned" : 0 }
{ "_id" : ObjectId("61312cb24262d9bbded23069"), "name" : "Tempting Tuesday", "home_state" : "Wyoming", "birthday" : { "month" : 6, "day" : 21, "year" : 1986 }, "belts_earned" : 0 }
{ "_id" : ObjectId("61312f764262d9bbded2306a"), "name" : "Zumba Zack", "home_state" : "Washington", "birthday" : { "month" : 10, "day" : 7, "year" : 1994 }, "belts_earned" : 1 }
{ "_id" : ObjectId("613132364262d9bbded2306b"), "name" : "Jumpin Jane", "home_state" : "Washington", "birthday" : { "month" : 2, "day" : 9, "year" : 1999 }, "belts_earned" : 1 }

Add a 'updated_on' field, and set the value as the current date.
> db.students.update({}, {$currentDate:{updated_on:true}},{multi:true})
WriteResult({ "nMatched" : 4, "nUpserted" : 0, "nModified" : 4 })
> db.students.find()  
{ "_id" : ObjectId("61312c544262d9bbded23068"), "name" : "Monday Blues", "home_state" : "Michigan", "birthday" : { "month" : 11, "day" : 1, "year" : 1967 }, "belts_earned" : 0, "updated_on" : ISODate("2021-09-02T20:28:18.981Z") }
{ "_id" : ObjectId("61312cb24262d9bbded23069"), "name" : "Tempting Tuesday", "home_state" : "Wyoming", "birthday" : { "month" : 6, "day" : 21, "year" : 1986 }, "belts_earned" : 0, "updated_on" : ISODate("2021-09-02T20:28:18.981Z") }
{ "_id" : ObjectId("61312f764262d9bbded2306a"), "name" : "Zumba Zack", "home_state" : "Washington", "birthday" : { "month" : 10, "day" : 7, "year" : 1994 }, "belts_earned" : 1, "updated_on" : ISODate("2021-09-02T20:28:18.981Z") }
{ "_id" : ObjectId("613132364262d9bbded2306b"), "name" : "Jumpin Jane", "home_state" : "Washington", "birthday" : { "month" : 2, "day" : 9, "year" : 1999 }, "belts_earned" : 1, "updated_on" : ISODate("2021-09-02T20:28:18.981Z") }